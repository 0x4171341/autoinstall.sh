#!/bin/bash

###
# Installation and autoconfigure script for debian'ish systems and dnscrypt.
#
# This script will install pre-req's, make & install dnscrypt and finally set it up
# as a daemon service that runs on system startup. It also gives you the option to
# choose which DNSCrypt service to use and easily reconfigure DNSCrypt and uninstall it.
#
# This script should work on new(er) debian'ish releases.
#
# Authors: https://github.com/simonclausen/dnscrypt-autoinstall/graphs/contributors
# Project site: https://github.com/simonclausen/dnscrypt-autoinstall
# traducciones al español Alfieri Morillo
# https://github.com/cyberthrone/dnsseguros
###

# Are you root?
if [ "$(id -u)" == 0 ]; then
	echo "No debe ejecutar esto como root."
	exit 1
elif ! sudo -v; then
	echo "Por favor, configurar sudo correctamente antes de ejecutar este script."
	exit 1
fi

# Vars for stuff
LSODIUMINST=false
DNSCRYPTINST=false
DNSCRYPTCONF=false
LSODIUMURL="https://download.libsodium.org/libsodium/releases"
DNSCRYPTURL="http://download.dnscrypt.org/dnscrypt-proxy"
INITURL="https://raw.github.com/simonclausen/dnscrypt-autoinstall/master/init-scripts"
LSODIUMVER=$(curl --retry 5 -L $LSODIUMURL | awk -F'(.tar|libsodium-)' '/libsodium-1/ {v=$2}; END {print v}')
DNSCRYPTVER=$(curl --retry 5 -L $DNSCRYPTURL | awk -F'(.tar|proxy-)' '/proxy-1/ {v=$2}; END {print v}')
WHICHRESOLVER=dnscrypteu

# /tmp may be mounted noexec
TMPDIR="$(dirname "$0")/dnscrypt-autoinstall
"

# Check files and set variables
if [ -e /usr/local/sbin/dnscrypt-proxy ]; then
	DNSCRYPTINST=true
fi

if [ -e /usr/local/lib/libsodium.so ]; then
	LSODIUMINST=true
fi

if [ -e /etc/init.d/dnscrypt-proxy ]; then
	DNSCRYPTCONF=true
fi

config_interface() {
	echo ""
	echo "¿Qué servicio DNSCrypt le gustaría utilizar?"
	echo ""
	echo "1) Off           (Regular, DNS Sin Encriptar)"
	echo "2) DNSCrypt.eu   (Europe - Sin registros, DNSSEC)"
	echo "3) Cisco OpenDNS (Anycast)"
	echo "4) CloudNS       (Australia - Sin registros, DNSSEC)"
	echo "5) OpenNIC       (Japan - Sin registros)"
	echo "6) OpenNIC       (Europe - Sin registros,Solo usuarios de su lista blanca)"
	echo "7) OpenNIC       (Toronto, Canada - Sin registros)"
	echo "8) OpenNIC       (San Francisco, USA - Sin registros)"
	echo "9) OpenNIC       (Seattle, USA - Sin registros)"
	echo "10) OkTurtles     (Georgia, USA - Sin registros)"
	echo "11) Soltysiak.com (Europe - Sin registros, DNSSEC)"
	echo ""
	read -p "Seleccione de la opcion  [1 -11]: " OPTION
	case $OPTION in
		1)
		WHICHRESOLVER=off
		;;
		2)
		WHICHRESOLVER=dnscrypteu
		;;
		3)
		WHICHRESOLVER=opendns
		;;
		4)
		WHICHRESOLVER=cloudns
		;;
		5)
		WHICHRESOLVER=opennicjp
		;;
		6)
		WHICHRESOLVER=openniceu
		;;
		7)
		WHICHRESOLVER=opennicca
		;;
		8)
		WHICHRESOLVER=opennicusasfo
		;;
		9)
		WHICHRESOLVER=opennicusasea
		;;
		10)
		WHICHRESOLVER=okturtles
		;;
		11)
		WHICHRESOLVER=soltysiak
		;;
	esac
	return 0
}

config_resolv() {
	# Set up resolv.conf to use dnscrypt
	sudo bash <<EOF
	chattr -i /etc/resolv.conf
	echo "nameserver 127.0.0.2" > /etc/resolv.conf
	echo "nameserver 127.0.0.3" >> /etc/resolv.conf

	# Make immutable. Dirty but dependable.
	chattr +i /etc/resolv.conf
EOF
}

config_do() {
	# Download and install the initscript for the chosen provider (including empty script for "off" mode).
	sudo bash <<EOF
	curl --retry 5 -Lo initscript-$WHICHRESOLVER.sh $INITURL/initscript-$WHICHRESOLVER.sh
	if [ "$DNSCRYPTCONF" == "true" ]; then
		/etc/init.d/dnscrypt-proxy stop
		update-rc.d -f dnscrypt-proxy remove
	fi
	mv initscript-$WHICHRESOLVER.sh /etc/init.d/dnscrypt-proxy
	chmod +x /etc/init.d/dnscrypt-proxy
EOF

	if [ "$WHICHRESOLVER" == "off" ]; then
		# User has chosen to turn off DNSCrypt and use regular, unencrypted DNS.
		# Restore resolv.conf-dnscryptbak by copying it to resolv.conf. Leave the backup in place in case the user uninstalls or turns DNSCrypt off again later.
		sudo bash <<EOF
		chattr -i /etc/resolv.conf
		cp -p /etc/resolv.conf-dnscryptbak /etc/resolv.conf
EOF
		return 0
	else
		# User has chosen a DNSCrypt provider. Start DNSCrypt.
		sudo bash <<EOF
		update-rc.d dnscrypt-proxy defaults
		/etc/init.d/dnscrypt-proxy start
EOF
		config_resolv
		return 0
	fi
}

import_gpgkey() {
	echo "Importando su llave con ID: $1"
	gpg --keyserver keys.gnupg.net --recv-keys "$1"

	if [ $? -ne 0 ]; then
		echo "Error al importar su llave $1"
		exit 1
	fi
}

verify_sig() {
	echo "Verificando la signatura: ${1%%.sig}"
	gpg --verify "$1"

	if [ $? -ne 0 ]; then
		echo "Error al verificar la signatura"
		exit 1
	fi
}

config_del() {
	sudo bash <<EOF
	/etc/init.d/dnscrypt-proxy stop
	update-rc.d -f dnscrypt-proxy remove
	rm -f /etc/init.d/dnscrypt-proxy
	rm -f /usr/local/sbin/dnscrypt-proxy
	deluser dnscrypt
	rm -rf /etc/dnscrypt
	chattr -i /etc/resolv.conf
	mv /etc/resolv.conf-dnscryptbak /etc/resolv.conf
EOF
}

# Debug: Remove after failed install
if [ "$1" == "forcedel" ]; then
	config_del
	exit
fi

if [ "$DNSCRYPTINST" == "true" ]; then
	if [ "$DNSCRYPTCONF" == "true" ]; then
		echo ""
		echo "Bienvenido a el auto instalador de  dnscrypt."
		echo ""
		echo "Parece que DNSCrypt fue instalada y configurada por este script."
		echo ""
		echo "Que te gustaría hacer?"
		echo ""
		echo "1) Configurar otro servicio DNSCrypt o desactivar DNSCrypt."
		echo "2) Desintalar DNSCrypt y eliminar el auto-startup de la configuracion."
		echo "3) Salir."
		echo ""
		read -p "Seleccione la option  de preferencia[1-3]: " OPTION
		case $OPTION in
			1)
			config_interface
			config_do
			echo "Reconfiguracion."
			exit
			;;
			2)
			config_del
			echo "DNSCrypt a sido eliminado."
			exit
			;;
			3)
			echo "Adios!"
			exit
			;;
		esac
	else
		echo ""
		echo "Error!"
		echo ""
		echo "Parece que ya está instalado DNSCrypt pero"
		echo "Este script aun no esta configurado."
		echo ""
		echo "Eliminar DNSCrypt y toda la configuracion?"
		echo "del sistema solo ejecuta este script de nuevo."
		echo ""
		echo "Para eliminar DNSCrypt, corra nuevamente este script"
		echo "nuevamente con' argumento 'forcedel por ejemplo:"
		echo "    ./autoinstall.sh forcedel"
		echo ""
		echo "Saliendo."
		exit 1
	fi
else
	if nc -z -w1 127.0.0.1 53; then
		echo ""
		echo "Error!"
		echo ""
		echo "Parece que ya hay un servidor DNS"
		echo "o servicio y esta escuchando en 127.0.0.1."
		echo ""
		echo "Para utilizar DNSCRypt, es necesario o bien desinstalarlo"
		echo "o hacer que escuche en otra IP de 127.0.0.1."
		echo ""
		echo "Para desinstalar DNSCrypt, intente ejecutar este script"
		echo "de nuevo con el argumento 'forcedel'. Por ejemplo:"
		echo "    ./dnscrypt-autoinstall.sh forcedel"
		echo ""
		echo "Saliendo."
		exit 1
	else
		echo ""
		echo "Bienvenido a el auto instalador. dnscrypt"
		echo ""
		echo "Esto instalará DNSCrypt y configurarlo para ejecutarse como un demonio en el arranque."
		echo ""
		read -n1 -r -p " para continuar..."
		clear
		echo ""
		echo "¿Le gustaría ver una lista de proveedores soportados?"
		read -p "(DNSCrypt.eu is default) [y/n]: " -e -i n SHOWLIST
		if [ "$SHOWLIST" == "y" ]; then
			config_interface
		fi

		# Install prereqs and make a working dir
		sudo bash <<EOF
		apt-get update
		apt-get install -y automake libtool build-essential ca-certificates curl sudo
EOF
		[ ! -d "$TMPDIR" ] && mkdir "$TMPDIR"
		pushd "$TMPDIR"

		# Import GPG key to verify files
		import_gpgkey 54A2B8892CC3D6A597B92B6C210627AABA709FE1

		# Is libsodium installed?
		if [ "$LSODIUMINST" == "false" ]; then
			# Nope? Then let's get it set up
			curl --retry 5 -Lo libsodium-$LSODIUMVER.tar.gz $LSODIUMURL/libsodium-$LSODIUMVER.tar.gz
			curl --retry 5 -Lo libsodium-$LSODIUMVER.tar.gz.sig $LSODIUMURL/libsodium-$LSODIUMVER.tar.gz.sig

			# Verify signature
			verify_sig libsodium-$LSODIUMVER.tar.gz.sig

			tar -zxf libsodium-$LSODIUMVER.tar.gz
			pushd libsodium-$LSODIUMVER
			./configure --enable-minimal && make && make check && \
			sudo bash <<EOF
			make install
			ldconfig
EOF
			popd
		fi

		# Continue with dnscrypt installation
		curl --retry 5 -Lo dnscrypt-proxy-$DNSCRYPTVER.tar.gz $DNSCRYPTURL/dnscrypt-proxy-$DNSCRYPTVER.tar.gz
		curl --retry 5 -Lo dnscrypt-proxy-$DNSCRYPTVER.tar.gz.sig $DNSCRYPTURL/dnscrypt-proxy-$DNSCRYPTVER.tar.gz.sig

		# Verify signature
		verify_sig dnscrypt-proxy-$DNSCRYPTVER.tar.gz.sig

		tar -zxf dnscrypt-proxy-$DNSCRYPTVER.tar.gz
		pushd dnscrypt-proxy-$DNSCRYPTVER
		./configure && make && \
		sudo bash <<EOF
		make install

		# Add dnscrypt user and homedir
		adduser --system --home /etc/dnscrypt/run --shell /bin/false --group \
			--disabled-password --disabled-login dnscrypt
EOF
		popd

		# Backup resolv.conf
		sudo bash <<EOF
		cp -p /etc/resolv.conf /etc/resolv.conf-dnscryptbak
EOF

		# Set up init script
		config_do

		# Clean up
		popd
		rm -rf "$TMPDIR"

		echo ""
		echo "DNSCryp ahora esta instalado."
		echo "Puede ejecutar esta secuencia de comandos para configurar de nuevo, desactivar o desinstalar."
	fi
fi
